{"version":3,"sources":["hooks/useLocalStorage.hook.js","app/search/searchAnime.js","app/anime/searchedAnime.component.js","app/anime/animeContainer.component.js","app/search/search.component.js","hooks/useDebounce.hook.js","app/App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","key","useState","localStorage","getItem","currentValue","setCurrentValue","useEffect","handler","e","storageArea","newValue","window","addEventListener","removeEventListener","setItem","search","a","process","queryString","fetch","then","r","json","results","catch","error","console","data","slice","SearchedAnimeComponent","prop","malId","imageUrl","title","className","alt","src","React","memo","AnimeContainerComponent","anime","animeList","map","result","mal_id","image_url","SearchComponent","searchInput","setSearchInput","setResults","isSearching","setIsSearching","searchHistory","setSearchHistory","history","setHistory","pastResults","setPastResults","debouncedValue","value","delay","setDebouncedValue","setTimeout","clearTimeout","useDebounce","length","log","searchAnime","searchResults","aria-label","placeholder","onChange","event","target","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2578930.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key) {\n  const [currentValue, setCurrentValue] = useState(() =>\n    localStorage.getItem(key)\n  );\n\n  useEffect(() => {\n    const handler = (e) => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setCurrentValue(e.newValue);\n      }\n    };\n    window.addEventListener('storage', handler);\n    return () => {\n      window.removeEventListener('storage', handler);\n    };\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, currentValue);\n  }, [key, currentValue]);\n\n  return [currentValue, setCurrentValue];\n}\n","export default async function searchAnime(search) {\n  const apiAddress = process.env.REACT_APP_API_ADDRESS;\n  const queryString = `?q=${search}`;\n\n  const data = await fetch(`${apiAddress}${queryString}`)\n    .then((r) => r.json())\n    .then((r) => r.results)\n    .catch((error) => {\n      console.error(error);\n      return [];\n    });\n\n  return data.slice(0, 5);\n}\n","import React from 'react';\n\nconst SearchedAnimeComponent = (prop) => {\n  const { malId, imageUrl, title } = prop;\n  return (\n    <div key={malId} className=\"Anime-item\">\n      <img alt=\"Обложка тайтла\" src={imageUrl} className=\"Anime-img\" />\n      <h6 className=\"Anime-title\">{title}</h6>\n    </div>\n  );\n};\n\nexport default React.memo(SearchedAnimeComponent);\n","import React from 'react';\nimport './anime.css';\nimport SearchedAnimeComponent from './searchedAnime.component';\n\nconst AnimeContainerComponent = (prop) => {\n  const { anime } = prop;\n  let animeList = [];\n\n  try {\n    animeList = anime.map((result) => (\n      <li key={`li_${result.mal_id || ''}`}>\n        <SearchedAnimeComponent\n          malId={result.mal_id || ''}\n          imageUrl={result.image_url || ''}\n          title={result.title || ''}\n        />\n      </li>\n    ));\n  } catch (error) {\n    console.error(error);\n  }\n\n  return <ul className=\"Anime\">{animeList}</ul>;\n};\n\nexport default React.memo(AnimeContainerComponent);\n","import React, { useEffect, useState } from 'react';\nimport './search.css';\nimport useDebounce from '../../hooks/useDebounce.hook';\nimport useLocalStorage from '../../hooks/useLocalStorage.hook';\nimport searchAnime from './searchAnime';\nimport AnimeContainerComponent from '../anime/animeContainer.component';\n\nconst SearchComponent = () => {\n  const [searchInput, setSearchInput] = useState('');\n  const [results, setResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchHistory, setSearchHistory] = useState([]);\n  const [history, setHistory] = useLocalStorage('history');\n  const [pastResults, setPastResults] = useLocalStorage('pastResults');\n\n  const debouncedValue = useDebounce(searchInput, 500);\n\n  useEffect(() => {\n    if (debouncedValue && debouncedValue.length > 2) {\n      setIsSearching(true);\n\n      if (results.length > 0) {\n        setPastResults(results || []);\n        setSearchHistory([debouncedValue, ...searchHistory]);\n        console.log(pastResults, history, searchHistory);\n      }\n\n      searchAnime(debouncedValue).then((searchResults) => {\n        setHistory(debouncedValue);\n        setIsSearching(false);\n        setResults(searchResults);\n      });\n    }\n  }, [debouncedValue]);\n\n  useEffect(() => {\n    setSearchInput(history);\n  }, [history]);\n\n  return (\n    <div>\n      <div className=\"Search-container\">\n        <input\n          aria-label=\"Поисковое поле\"\n          placeholder={`Введите запрос, например, ${history || 'Naruto'}`}\n          className=\"Search\"\n          onChange={(event) => setSearchInput(event.target.value)}\n        />\n\n        <div className=\"Search-history\">\n          Последние запросы:\n          <ul>\n            {searchHistory.slice(0, 3).map((element) => (\n              <li key={element}>{element}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      {isSearching && <div>Поиск {searchInput}...</div>}\n\n      <AnimeContainerComponent anime={results} />\n\n      {pastResults ? (\n        <>\n          <div>Прошлый поиск</div>\n          <AnimeContainerComponent anime={pastResults} />\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SearchComponent;\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n}\n","import React from 'react';\nimport './App.css';\nimport SearchComponent from './search/search.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"App-header__logo\">anifind</div>\n      </header>\n      <main className=\"App-main\">\n        <SearchComponent />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}